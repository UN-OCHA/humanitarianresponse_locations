<?php
/**
 * @file
 */

include_once('humanitarianresponse_locations.features.inc');

function humanitarianresponse_locations_load_by_pcode($pcode) {
  $query = new EntityFieldQuery();
  $result = $query
    ->entityCondition('entity_type', 'taxonomy_term')
    ->entityCondition('bundle', 'locations')
    ->fieldCondition('field_location_pcode', 'value', $pcode, '=')
    ->execute();
  if (!empty($result['taxonomy_term'])) {
    $tids = array_keys($result['taxonomy_term']);
    $tid = $tids[0];
    return taxonomy_term_load($tid);
  }
  else {
    return NULL;
  }
    
}


function humanitarianresponse_locations_hxl_synchronize($pcode) {
  if (module_exists('hxl_api')) {
    _humanitarianresponse_locations_hxl_synchronize_by_admin_level($pcode, 0);
  }
}

function _humanitarianresponse_locations_hxl_synchronize_by_admin_level($pcode, $level) {
  if (module_exists('hxl_api')) {
    $locations = hxl_api_get_locations_by_admin_level($pcode, $level);
    foreach ($locations as $location) {
      $term = humanitarianresponse_locations_load_by_pcode($location['pcode']);
      debug($term);
      if (!isset($term)) {
        $voc = taxonomy_vocabulary_machine_name_load('locations');
        $term = new stdClass();
        $term->vid = $voc->vid;
      }
      $term->name = $location['name'];
      $term->field_location_pcode[LANGUAGE_NONE][0]['value'] = $location['pcode'];
      $term->field_location[LANGUAGE_NONE][0]['wkt'] = $location['wkt'];
      taxonomy_term_save($term);
    }
  }
}
